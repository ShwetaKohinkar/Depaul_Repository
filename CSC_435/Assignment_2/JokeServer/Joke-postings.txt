* Hi Saurav,This is a great suggestion, I tried to work on this idea and the link was very helpful. I was able to implement this feature in my JokeServer. As we are maintaining two different servers, I had to create 2 different files to maintain the state of each server.* Hi Chiranth,All though you can create as many instances as you want for JokeClientAdmin, but it has nothing to do with instances of JokeClient. Normally, one instance of JokeClientAdmin is enough for all JokeClient instances as we are toggling the mode of server, which will be common for all clients connected to that server.* Hi Jessa,On each client connection we need to send single response, either Joke/Proverb depending the current server mode and exit. And yes, at the end of each cycle of Joke/Proverb we need to announce Cycle is over.* Hi Nikhil,I'll try to explain this without the randomization part so it will be easy to understand.So, based on my understanding1) Suppose the server is in Joke mode and Client1 has already received JA, JB, and JC and if the mode is changed to a proverb then client1 should receive PA. Again switch it back to Joke mode, now the client1 must get JDÊ2)Suppose the server is in Joke mode and Client1 has already received JA, JB, and JC and if a new client 'client2' connects to the same server then that client should get JA first and not JD, and then the remaining jokes upon request. JD will be received by client1So all these conversation states should be maintained for each client* Hi Huy,If it's already a proverb mode and a new client connects to the same server then yes, the mode will be a proverb, assuming that we are maintaining the state for this client separately.* There could be multiple ways to design and implement this feature. Specifically in our program, even if we don't send anything at all from AdminClient we can manage this feature as we just need to toggle the mode at server side on every AdminClient connection and return the current mode to AdminClient.* Hi Alan,If we follow the "suggested development order" section, initially, we don't require any input from the Client or AdminClien but when we proceed further to the "JokeServer Development" section, there are some inputs that are required from both the clients in the form of some characters such as, 'Enter key', 's' keyword, 'quit', 'username' etc. So, we need to develop our code accordingly.* Hi Kush,As per my understanding, when a new user connects, first we need to send the jokes or proverb in order respectively i.e. JA,JB,JC,JD and from the next cycle for the same user we need to randomize it.* Hi Huy,From my understanding, we don't need to randomize the body of the jokes. With reference to this point "Build a template of exactly four jokes and four proverbs to use in our client/server system." We should have only four jokes and proverbs and they will have their prefix fixed as 'JA, JB, JC, JD' and 'PA, PB, PC, PD' so when randomizing we need to randomize the whole set along with their prefix. So in your example, it would be something like, "JC: This is C", "JA: This is A", "JD: This is D", "JA: This is A", just a random sequence.* Hi Huy,From the response provided by Professor in the same thread above, I think the randomization will be done from the first cycle itself.Hi Mouna,Your understanding is correct. We have four servers, for JokeClient 4545 & 4546 and for JokeClientAdmin 5050 & 5051. We don't need to send the ports from the client to server we just need to use the correct port while connecting client from that particular server.* Primary Server's interruptionAccording to the description provided, when the primary server is up, only then can we open the secondary server, but what if there is any interruption in the primary server after opening the secondary server? Though I didn't find any details regarding this particular scenario on JokeServer Webpage, according to me, the secondary server should keep on running and processing the requests from the clients.      Has anyone given any thought to this behavior?* String manipulation suggestionA small suggestion for the string manipulation part. We could store the joke or proverb structure in a list in java in given format "JA <username> : <body>" and at the time of response from the server we could simple fetch the joke from the list and using the "replace" function provided by string class we can form the final response for the client so that no manipulation will be required on the client side.* JokeClientAdmin port clarificationHi All,3. "Change the port at which it is connecting to the server."Does it mean that the provided ports '4545' and '4546' i.e. primary and secondary ports are just for the JokeClient and port 5050 will be used for JokeClientAdmin?* Hi Professor,Thank you for highlighting these points. I went through the assignment description again and these points are clear to me now.